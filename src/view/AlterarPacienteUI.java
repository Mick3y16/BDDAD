package view;

import controller.AlterarPacienteController;
import java.awt.Point;
import javax.swing.JOptionPane;
import model.Cidade;
import model.Clinica;
import model.Medico;
import model.Paciente;
import model.Pais;
import model.SistemaSaude;

/**
 *
 */
public class AlterarPacienteUI extends javax.swing.JDialog {

    /**
     * Janela principal da aplicação.
     */
    private final java.awt.Frame framePai;

    /**
     * Controlador da funcionalidade que permite alterar um paciente.
     */
    private final AlterarPacienteController controlador;

    private Paciente paciente;

    /**
     * Creates new form AlerarPacienteUI
     *
     * @param parent
     * @param modal
     * @param clinica
     */
    public AlterarPacienteUI(java.awt.Frame parent, boolean modal, Clinica clinica) {
        super(parent, "Alterar Paciente", modal);
        this.framePai = parent;
        this.controlador = new AlterarPacienteController(clinica);
        initComponents();
        propriedadesJanela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        lblInicial = new javax.swing.JLabel();
        cmbListaPacientes = new javax.swing.JComboBox<>(this.controlador.getListaPacientes());
        btnSelecionar = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        lblPais = new javax.swing.JLabel();
        lblSisSaude = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSistemaSaude = new javax.swing.JList<>(this.controlador.getListaSistemasSaude());
        txtNome = new javax.swing.JTextField();
        cmbCidades = new javax.swing.JComboBox<>(this.controlador.getListaCidades());
        cmbPaises = new javax.swing.JComboBox<>(this.controlador.getListaPaises());
        txtEndereco = new javax.swing.JTextField();
        lblBI = new javax.swing.JLabel();
        lblNIF = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        lblDataNasc = new javax.swing.JLabel();
        lblMedico = new javax.swing.JLabel();
        txtBI = new javax.swing.JTextField();
        txtNIF = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        cmbMedicos = new javax.swing.JComboBox<>(this.controlador.getListaMedicos());
        btnAlterar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblInicial.setText("Escolha o paciente a alterar:");

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        lblNome.setText("Nome completo:");

        lblEndereco.setText("Endereço:");

        lblCidade.setText("Cidade:");

        lblPais.setText("País:");

        lblSisSaude.setText("Sis. de Saúde:");

        listSistemaSaude.setEnabled(false);
        jScrollPane1.setViewportView(listSistemaSaude);

        txtNome.setEnabled(false);

        cmbCidades.setEnabled(false);

        cmbPaises.setEnabled(false);

        txtEndereco.setEnabled(false);

        lblBI.setText("BI:");

        lblNIF.setText("NIF:");

        lblTelefone.setText("Telefone:");

        lblDataNasc.setText("Data de Nasc:");

        lblMedico.setText("Médico:");

        txtBI.setEnabled(false);

        txtNIF.setEnabled(false);

        txtTelefone.setEnabled(false);

        cmbMedicos.setEnabled(false);

        btnAlterar.setEnabled(false);
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jXDatePicker1.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblInicial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbListaPacientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(lblEndereco, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCidade, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPais, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSisSaude, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtEndereco, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbPaises, 0, 110, Short.MAX_VALUE)
                                    .addComponent(cmbCidades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(54, 54, 54)
                                            .addComponent(lblBI)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtBI))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(47, 47, 47)
                                            .addComponent(lblNIF)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtNIF))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(22, 22, 22)
                                            .addComponent(lblTelefone)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtTelefone))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblDataNasc)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(31, 31, 31)
                                            .addComponent(lblMedico)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cmbMedicos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(btnAlterar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnCancelar))))
                            .addComponent(txtNome))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionar)
                    .addComponent(lblInicial)
                    .addComponent(cmbListaPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEndereco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCidade)
                    .addComponent(txtBI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPaises, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPais)
                    .addComponent(txtNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNIF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSisSaude)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelefone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDataNasc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMedico)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnAlterar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        this.cmbListaPacientes.setEnabled(false);
        this.btnSelecionar.setEnabled(false);
        this.btnAlterar.setEnabled(true);
        this.cmbCidades.setEnabled(true);
        this.cmbMedicos.setEnabled(true);
        this.cmbPaises.setEnabled(true);
        this.listSistemaSaude.setEnabled(true);
        this.jXDatePicker1.setEnabled(true);
        this.jXDatePicker1.getEditor().setEditable(false);
        this.txtBI.setEnabled(true);
        this.txtEndereco.setEnabled(true);
        this.txtNIF.setEnabled(true);
        this.txtNome.setEnabled(true);
        this.txtTelefone.setEnabled(true);

        // Preencher cada um dos componentes.
        this.paciente = (Paciente) this.cmbListaPacientes.getSelectedItem();
        this.txtBI.setText(this.paciente.getBi());
        this.txtEndereco.setText(this.paciente.getEndereco());
        this.txtNIF.setText(String.valueOf(this.paciente.getNif()));
        this.txtNome.setText(this.paciente.getNomeCompleto());
        this.txtTelefone.setText(String.valueOf(this.paciente.getTelefone()));
        this.jXDatePicker1.setDate(this.paciente.getDataNascimento());

        for (int i = 0; i < this.controlador.getListaCidades().getSize(); i++) {
            if (((Cidade) this.controlador.getListaCidades().
                    getElementAt(i)).getId() == (this.paciente.getCidade())) {
                this.cmbCidades.setSelectedIndex(i);
            }
        }

        for (int i = 0; i < this.controlador.getListaPaises().getSize(); i++) {
            if (((Pais) this.controlador.getListaPaises().
                    getElementAt(i)).getId() == (this.paciente.getPais())) {
                this.cmbPaises.setSelectedIndex(i);
            }
        }

        for (int i = 0; i < this.controlador.getListaMedicos().getSize(); i++) {
            if (((Medico) this.controlador.getListaMedicos().
                    getElementAt(i)).getId() == (this.paciente.getMedico())) {
                this.cmbMedicos.setSelectedIndex(i);
            }
        }
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        try {
            this.paciente.setBi(txtBI.getText());
            this.paciente.setNif(Integer.parseInt(txtNIF.getText()));
            this.paciente.setNomeCompleto(txtNome.getText());
            this.paciente.setEndereco(txtEndereco.getText());
            this.paciente.setCidade(((Cidade) cmbCidades.getSelectedItem()).getId());
            this.paciente.setPais(((Pais) cmbPaises.getSelectedItem()).getId());
            this.paciente.setTelefone(txtTelefone.getText());
            this.paciente.setDataNascimento(this.jXDatePicker1.getDate());
            this.paciente.setMedico(((Medico) cmbMedicos.getSelectedItem()).getId());

            /*List<Integer> sistemasSaude = new ArrayList<>();
            for (SistemaSaude sistemaSaude : this.listSistemaSaude.getSelectedValuesList()) {
                sistemasSaude.add(sistemaSaude.getId());
            }
            this.paciente.setSistemasSaude(sistemasSaude);*/
            boolean resultado = this.controlador.alterarPaciente(paciente);

            if (resultado) {
                JOptionPane.showMessageDialog(
                        framePai,
                        "Paciente atualizado com sucesso.",
                        "Atualizar Paciente",
                        JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(
                    framePai,
                    ex.getMessage(),
                    "Atualizar Paciente",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void propriedadesJanela() {
        pack();
        setLocation(new Point(this.framePai.getX() + this.framePai.getWidth(), this.framePai.getY()));
        setResizable(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JComboBox<String> cmbCidades;
    private javax.swing.JComboBox<String> cmbListaPacientes;
    private javax.swing.JComboBox<String> cmbMedicos;
    private javax.swing.JComboBox<String> cmbPaises;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private javax.swing.JLabel lblBI;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblDataNasc;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblInicial;
    private javax.swing.JLabel lblMedico;
    private javax.swing.JLabel lblNIF;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPais;
    private javax.swing.JLabel lblSisSaude;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JList<SistemaSaude> listSistemaSaude;
    private javax.swing.JTextField txtBI;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNIF;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
