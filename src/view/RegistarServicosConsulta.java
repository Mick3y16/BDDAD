package view;

import controller.RegistarServicosConsultaController;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.border.EmptyBorder;
import model.Clinica;
import model.Consulta;
import model.Paciente;
import model.Tratamento;

/**
 *
 */
public class RegistarServicosConsulta extends javax.swing.JDialog {

    /**
     * Janela principal da aplicação.
     */
    private final java.awt.Frame framePai;

    /**
     * Controlador da funcionalidade que permite registar os serviços realizados
     * numa consulta por um médico.
     */
    private final RegistarServicosConsultaController controlador;

    /**
     * Vetor com o nome de cada serviço disponível.
     */
    private String[] nomeServicos;

    /**
     * Creates new form RegistarServicosConsulta
     *
     * @param parent
     * @param modal
     * @param clinica
     */
    public RegistarServicosConsulta(java.awt.Frame parent, boolean modal, Clinica clinica) {
        super(parent, "Registar Serviços na Consulta", modal);
        this.framePai = parent;
        this.controlador = new RegistarServicosConsultaController(clinica);
        this.nomeServicos = this.controlador.getNomeServicos();
        initComponents();
        propriedadesJanela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConsulta = new javax.swing.JLabel();
        cmbConsultas = new javax.swing.JComboBox<>();
        btnSelecionarConsulta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listServPac = new javax.swing.JList<>();
        lblservPac = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listServCons = new javax.swing.JList<>();
        lblServCons = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        lblPaciente = new javax.swing.JLabel();
        cmbPaciente = new javax.swing.JComboBox<>(this.controlador.getListaPacientes());
        btnSelecionarPaciente = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblConsulta.setText("Selecione a consulta:");

        cmbConsultas.setEnabled(false);

        btnSelecionarConsulta.setEnabled(false);
        btnSelecionarConsulta.setText("Selecionar");
        btnSelecionarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarConsultaActionPerformed(evt);
            }
        });

        listServPac.setCellRenderer(new CellRender());
        listServPac.setEnabled(false);
        listServPac.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listServPac);

        lblservPac.setText("Lista de Serviços por realizar:");

        listServCons.setCellRenderer(new CellRender());
        listServCons.setEnabled(false);
        listServCons.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listServCons);

        lblServCons.setText("Lista de serviços realizados na consulta:");

        btnCancelar.setText("Terminar o Registo");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblPaciente.setText("Selecione o paciente:");

        btnSelecionarPaciente.setText("Selecionar");
        btnSelecionarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarPacienteActionPerformed(evt);
            }
        });

        btnAdicionar.setEnabled(false);
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblservPac)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblServCons)
                                .addGap(0, 60, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbConsultas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionarConsulta))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblPaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPaciente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionarPaciente)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarPaciente)
                    .addComponent(lblPaciente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionarConsulta)
                    .addComponent(cmbConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConsulta))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServCons, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblservPac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdicionar))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarConsultaActionPerformed
        int paciente = ((Paciente) this.cmbPaciente.getSelectedItem()).getId();
        int consulta = ((Consulta) this.cmbConsultas.getSelectedItem()).getId();

        this.listServPac.setModel(this.controlador.getListaTratamentoPaciente(paciente));
        this.listServCons.setModel(this.controlador.getListaTratamentoPacienteConsulta(paciente, consulta));

        this.cmbConsultas.setEnabled(false);
        this.btnSelecionarConsulta.setEnabled(false);
        this.listServPac.setEnabled(true);
        this.btnAdicionar.setEnabled(true);
    }//GEN-LAST:event_btnSelecionarConsultaActionPerformed

    private void btnSelecionarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarPacienteActionPerformed
        int paciente = ((Paciente) this.cmbPaciente.getSelectedItem()).getId();
        this.cmbConsultas.setModel(this.controlador.getListaConsultasPaciente(paciente));

        this.cmbPaciente.setEnabled(false);
        this.btnSelecionarPaciente.setEnabled(false);
        this.cmbConsultas.setEnabled(true);
        this.btnSelecionarConsulta.setEnabled(true);

    }//GEN-LAST:event_btnSelecionarPacienteActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        int indice = this.listServPac.getSelectedIndex();
        try {
            if (indice != -1) {
                int tratamento = this.listServPac.getSelectedValue().getId();
                int consulta = ((Consulta) this.cmbConsultas.getSelectedItem()).getId();

                this.controlador.registarTratamentoConsulta(tratamento, consulta);
                
                Tratamento elemento = (Tratamento) ((DefaultListModel) this.listServPac.getModel()).remove(indice);
                ((DefaultListModel) this.listServCons.getModel()).addElement(elemento);
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "Não selecionou um tratamento válido para registar na consulta.",
                        "Registar tratamento",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(
                        this,
                        ex.getMessage(),
                        "Registar tratamento",
                        JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void propriedadesJanela() {
        pack();
        setLocation(new Point(this.framePai.getX() + this.framePai.getWidth(), this.framePai.getY()));
        setResizable(false);
    }

    public class CellRender extends JLabel implements ListCellRenderer<Tratamento> {

        public CellRender() {
            setOpaque(true);
        }

        @Override
        public Component getListCellRendererComponent(
                JList<? extends Tratamento> list, Tratamento value, int index,
                boolean isSelected, boolean cellHasFocus) {
            setText(RegistarServicosConsulta.this.nomeServicos[Integer.parseInt(value.toString())]);

            if (isSelected) {
                setBackground(Color.LIGHT_GRAY);
                setForeground(Color.BLACK);
            } else {
                setBackground(Color.WHITE);
                setForeground(Color.BLACK);
            }

            setBorder(isSelected && cellHasFocus ? BorderFactory.createLineBorder(Color.BLACK, 1) : new EmptyBorder(2, 2, 2, 2));

            return this;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSelecionarConsulta;
    private javax.swing.JButton btnSelecionarPaciente;
    private javax.swing.JComboBox<Consulta> cmbConsultas;
    private javax.swing.JComboBox<Paciente> cmbPaciente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblConsulta;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblServCons;
    private javax.swing.JLabel lblservPac;
    private javax.swing.JList<Tratamento> listServCons;
    private javax.swing.JList<Tratamento> listServPac;
    // End of variables declaration//GEN-END:variables
}
